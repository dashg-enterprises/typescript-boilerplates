name: CD Step - Deploy to AWS

on:
  pull_request:
    branches: 
      - main
    types: [closed]

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: 624626124579.dkr.ecr.us-east-1.amazonaws.com                   
  ECR_REPOSITORY: dashg-template-builds
  APPLICATION_NAME: dashg-template

jobs:
  deploy:
    if: ${{ github.event.pull_request.merged }}
    name: Build, Test, & Deploy
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test
      - run: echo "${{ secrets.AWS_ACCESS_KEY_ID }}"
      - run: echo "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }} 
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Deploy ECS stack to AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{env.APPLICATION_NAME}}-stack
          template: iac/ecs-cluster-stack.yaml
          no-fail-on-empty-changeset: "1"
          parameter-overrides: "ImageUrl=${{ steps.build-image.outputs.image }},ApplicationName=${{ env.APPLICATION_NAME }}"